{"mappings":"AAEA,MAAMA,EAAM,0DAENC,EAAWC,IACfC,QAAQC,IAAI,QAEZ,MAAMC,EAAU,CACdC,OAAQ,OACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACP,eAAgB,qBAIpB,OAAOC,MAAMX,EAAKK,EAAQ,EAWtBO,EAAa,CAACC,EAAIC,KACtBX,QAAQC,IAAI,OAEZ,MAAMC,EAAU,CACdC,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CAAEM,OAAQD,IAC/BJ,QAAS,CACP,eAAgB,qBAIpB,OAAOC,MAAM,GAAGX,KAAOa,IAAMR,EAAQ,EAIjCW,EAAaH,IACjBV,QAAQC,IAAI,UAMZ,OAAOO,MAAM,GAAGX,KAAOa,IAJP,CACdP,OAAQ,UAG2B,EC9CjCW,EAAUC,SAASC,eAAe,WAClCC,EAAOF,SAASC,eAAe,QACrC,IAAIE,EAAY,EAehB,SAASC,EAASC,EAAMR,GAAS,EAAOF,EAAKQ,GAC3C,MAAMG,EAAON,SAASO,cAAc,MACpCL,EAAKM,YAAYF,GAEjBA,EAAKG,YAAcJ,EACnBC,EAAKI,QAAQf,GAAKA,EAEdE,IACFS,EAAKK,UAAY,WAMrB,SAAwBC,GACtB,MAAMC,EAAOb,SAASO,cAAc,QACpCK,EAAGJ,YAAYK,GAEfA,EAAKJ,YAAc,IACnBI,EAAKF,UAAY,O,CARjBG,CAAeR,E,CC5BjB,MAAMS,EAASf,SAASC,eAAe,UACjCe,EAAOhB,SAASC,eAAe,QAErCc,EAAOE,iBAAiB,SDCxB,WACE,MAAMC,EAAanB,EAAQoB,MAAMC,OAEd,KAAfF,GAKJd,EAASc,GACTnB,EAAQoB,MAAQ,GA0BlB,SAAqBd,EAAMR,GAAS,GAGlCd,EAFgB,C,KAAEsB,E,OAAMR,IAGxBM,GAAa,C,CA7BbkB,CAAYH,IANVI,MAAM,4B,ICJVN,EAAKC,iBAAiB,SD0CtB,UAA6BM,OAAEA,IAC7B,GAAuB,OAAnBA,EAAOC,QAAkB,CAC3BD,EAAOE,UAAUC,OAAO,WAExB,MAAMC,EAASJ,EAAOb,QAAQf,GACxBiC,EAAaL,EAAOE,UAAUI,SAAS,WAC7CnC,EAAWiC,EAAQC,E,CAGrB,GAAuB,SAAnBL,EAAOC,QAAoB,CAC7BD,EAAOO,WAAWC,SAElB,MAAMJ,EAASJ,EAAOO,WAAWpB,QAAQf,GACzCG,EAAW6B,E,KCrDfK,OAAOf,iBAAiB,oBDyDxB,YD7CEhC,QAAQC,IAAI,OAELO,MAAMX,GAAKmD,MAAKC,GAAOA,EAAIC,UC6C/BF,MAAKG,IACJA,EAAMC,SAAQ,EAAChC,KAAEA,EAAIR,OAAEA,EAAMF,GAAEA,KAASS,EAASC,EAAMR,EAAQF,KAC/DV,QAAQC,IAAIkD,GACLA,KAERH,MAAKG,IACJjC,EACmB,IAAjBiC,EAAME,OAAe,EAAIC,OAAOH,EAAMA,EAAME,OAAS,GAAG3C,IAAM,CAAC,G","sources":["src/js/api.js","src/js/functions.js","src/js/script.js"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://659e293947ae28b0bd35422e.mockapi.io/todos/todos';\n\nconst saveTask = task => {\n  console.log('POST');\n\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(task),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  return fetch(URL, options);\n  // return axios.post(URL, task);\n};\n\nconst loadTasks = () => {\n  console.log('GET');\n\n  return fetch(URL).then(res => res.json());\n  // return axios.get(URL).then(res => res.data);\n};\n\nconst updateTask = (id, status) => {\n  console.log('PUT');\n\n  const options = {\n    method: 'PUT',\n    body: JSON.stringify({ isDone: status }),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  return fetch(`${URL}/${id}`, options);\n  // return axios.put(`${URL}/${id}`, {isDone: status});\n};\n\nconst deleteTask = id => {\n  console.log('DELETE');\n\n  const options = {\n    method: 'DELETE',\n  };\n\n  return fetch(`${URL}/${id}`, options);\n  // return axios.delete(`${URL}/${id}`);\n};\n\nexport { saveTask, loadTasks, updateTask, deleteTask };\n","import { saveTask, loadTasks, updateTask, deleteTask } from './api.js';\n\nconst myInput = document.getElementById('myInput');\nconst myUL = document.getElementById('myUL');\nlet currentId = 1;\n\nfunction addNewTask() {\n  const inputValue = myInput.value.trim();\n\n  if (inputValue === '') {\n    alert('You must write something!');\n    return;\n  }\n\n  createLI(inputValue);\n  myInput.value = '';\n  addTaskToDB(inputValue);\n}\n\nfunction createLI(text, isDone = false, id = currentId) {\n  const liEL = document.createElement('LI');\n  myUL.appendChild(liEL);\n\n  liEL.textContent = text;\n  liEL.dataset.id = id;\n\n  if (isDone) {\n    liEL.className = 'checked';\n  }\n\n  addCloseButton(liEL);\n}\n\nfunction addCloseButton(li) {\n  const span = document.createElement('SPAN');\n  li.appendChild(span);\n\n  span.textContent = '\\u00D7';\n  span.className = 'close';\n}\n\nfunction addTaskToDB(text, isDone = false) {\n  const newTask = { text, isDone };\n  // const newTask = {text: text, isDone: isDone};\n  saveTask(newTask);\n  currentId += 1;\n}\n\nfunction handleTaskBehaviour({ target }) {\n  if (target.tagName === 'LI') {\n    target.classList.toggle('checked');\n\n    const taskId = target.dataset.id;\n    const taskStatus = target.classList.contains('checked');\n    updateTask(taskId, taskStatus);\n  }\n\n  if (target.tagName === 'SPAN') {\n    target.parentNode.remove();\n\n    const taskId = target.parentNode.dataset.id;\n    deleteTask(taskId);\n  }\n}\n\nfunction fillTasksList() {\n  loadTasks()\n    .then(todos => {\n      todos.forEach(({ text, isDone, id }) => createLI(text, isDone, id));\n      console.log(todos);\n      return todos;\n    })\n    .then(todos => {\n      currentId =\n        todos.length === 0 ? 1 : Number(todos[todos.length - 1].id) + 1;\n    });\n}\n\nexport { addNewTask, handleTaskBehaviour, fillTasksList };\n","import { addNewTask, handleTaskBehaviour, fillTasksList } from './functions.js';\n\nconst addBtn = document.getElementById('addBtn');\nconst myUL = document.getElementById('myUL');\n\naddBtn.addEventListener('click', addNewTask);\nmyUL.addEventListener('click', handleTaskBehaviour);\n\nwindow.addEventListener('DOMContentLoaded', fillTasksList);\n"],"names":["$56ca17bb174b0ce3$var$URL","$56ca17bb174b0ce3$export$2889637ef1bcfccc","task","console","log","options","method","body","JSON","stringify","headers","fetch","$56ca17bb174b0ce3$export$e8e0154b7bb02be4","id","status","isDone","$56ca17bb174b0ce3$export$f08d315250e1aa23","$c5897a300754b7cd$var$myInput","document","getElementById","$c5897a300754b7cd$var$myUL","$c5897a300754b7cd$var$currentId","$c5897a300754b7cd$var$createLI","text","liEL","createElement","appendChild","textContent","dataset","className","li","span","$c5897a300754b7cd$var$addCloseButton","$1ee2b6306238ec66$var$addBtn","$1ee2b6306238ec66$var$myUL","addEventListener","inputValue","value","trim","$c5897a300754b7cd$var$addTaskToDB","alert","target","tagName","classList","toggle","taskId","taskStatus","contains","parentNode","remove","window","then","res","json","todos","forEach","length","Number"],"version":3,"file":"index.a321f71b.js.map"}